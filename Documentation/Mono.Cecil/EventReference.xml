<Type Name="EventReference" FullName="Mono.Cecil.EventReference">
  <TypeSignature Language="C#" Value="public abstract class EventReference : Mono.Cecil.MemberReference" />
  <AssemblyInfo>
    <AssemblyName>Mono.Cecil</AssemblyName>
    <AssemblyVersion>0.4.3.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.Cecil.MemberReference</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventReference (string name, Mono.Cecil.TypeReference eventType);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="eventType" Type="Mono.Cecil.TypeReference" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="eventType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventType">
      <MemberSignature Language="C#" Value="public Mono.Cecil.TypeReference EventType { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Cecil.TypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
