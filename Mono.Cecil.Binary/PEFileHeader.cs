/*
 * Copyright (c) 2004 DotNetGuru and the individuals listed
 * on the ChangeLog entries.
 *
 * Authors :
 *   Jb Evain   (jb.evain@dotnetguru.org)
 *
 * This is a free software distributed under a MIT/X11 license
 * See LICENSE.MIT file for more details
 *
 * Generated by /CodeGen/cecil-gen.rb do not edit
 * Mon Jan 10 00:16:43 Paris, Madrid 2005
 *
 *****************************************************************************/


namespace Mono.Cecil.Binary {

    internal sealed class PEFileHeader : IHeader, IBinaryVisitable {

        private ushort m_machine;
        private ushort m_numberOfSections;
        private uint m_timeDateStamp;
        private uint m_pointerToSymbolTable;
        private uint m_numberOfSymbols;
        private ushort m_optionalHeaderSize;
        private ImageCharacteristics m_characteristics;


        public ushort Machine {
            get { return m_machine; }
            set { m_machine = value; }
        }

        public ushort NumberOfSections {
            get { return m_numberOfSections; }
            set { m_numberOfSections = value; }
        }

        public uint TimeDateStamp {
            get { return m_timeDateStamp; }
            set { m_timeDateStamp = value; }
        }

        public uint PointerToSymbolTable {
            get { return m_pointerToSymbolTable; }
            set { m_pointerToSymbolTable = value; }
        }

        public uint NumberOfSymbols {
            get { return m_numberOfSymbols; }
            set { m_numberOfSymbols = value; }
        }

        public ushort OptionalHeaderSize {
            get { return m_optionalHeaderSize; }
            set { m_optionalHeaderSize = value; }
        }

        public ImageCharacteristics Characteristics {
            get { return m_characteristics; }
            set { m_characteristics = value; }
        }

        public PEFileHeader() {}

        public void SetDefaultValues() {
            m_machine = 0x14c;
            m_pointerToSymbolTable = 0;
            m_numberOfSymbols = 0;
        }

        public void Accept(IBinaryVisitor visitor) {
            visitor.Visit(this);
        }
    }
}
