/*
 * Copyright (c) 2004 DotNetGuru and the individuals listed
 * on the ChangeLog entries.
 *
 * Authors :
 *   Jb Evain   (jb.evain@dotnetguru.org)
 *
 * This is a free software distributed under a MIT/X11 license
 * See LICENSE.MIT file for more details
 *
 * Generated by /CodeGen/cecil-gen.rb do not edit
 * Thu Feb 24 01:20:27 Paris, Madrid 2005
 *
 *****************************************************************************/

namespace Mono.Cecil.Metadata {

    using Mono.Cecil;

    [RId (0x14)]
    internal sealed class EventTable : IMetadataTable {

        private RowCollection m_rows;

        public EventRow this [int index] {
            get { return m_rows [index] as EventRow; }
            set { m_rows [index] = value; }
        }

        public RowCollection Rows {
            get { return m_rows; }
            set { m_rows = value; }
        }

        public void Accept (IMetadataTableVisitor visitor)
        {
            visitor.Visit (this);
            this.Rows.Accept (visitor.GetRowVisitor ());
        }
    }

    internal sealed class EventRow : IMetadataRow {

        public static readonly int RowSize = 10;
        public static readonly int RowColumns = 3;

        private EventAttributes m_eventFlags;
        private uint m_name;
        private MetadataToken m_eventType;

        public EventAttributes EventFlags {
            get { return m_eventFlags; }
            set { m_eventFlags = value; }
        }

        public uint Name {
            get { return m_name; }
            set { m_name = value; }
        }

        public MetadataToken EventType {
            get { return m_eventType; }
            set { m_eventType = value; }
        }

        public int Size {
            get { return EventRow.RowSize; }
        }

        public int Columns {
            get { return EventRow.RowColumns; }
        }

        public void Accept (IMetadataRowVisitor visitor)
        {
            visitor.Visit (this);
        }
    }
}
