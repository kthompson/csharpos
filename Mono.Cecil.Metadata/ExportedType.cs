/*
 * Copyright (c) 2004 DotNetGuru and the individuals listed
 * on the ChangeLog entries.
 *
 * Authors :
 *   Jb Evain   (jb.evain@dotnetguru.org)
 *
 * This is a free software distributed under a MIT/X11 license
 * See LICENSE.MIT file for more details
 *
 * Generated by /CodeGen/cecil-gen.rb do not edit
 * Wed Jan 19 14:28:45 Paris, Madrid 2005
 *
 *****************************************************************************/

namespace Mono.Cecil.Metadata {

    using Mono.Cecil;

    [RId (0x27)]
    internal sealed class ExportedTypeTable : IMetadataTable {

        private RowCollection m_rows;

        public ExportedTypeRow this [int index] {
            get { return m_rows [index] as ExportedTypeRow; }
            set { m_rows [index] = value; }
        }

        public RowCollection Rows {
            get { return m_rows; }
            set { m_rows = value; }
        }

        public void Accept (IMetadataTableVisitor visitor)
        {
            visitor.Visit (this);
            this.Rows.Accept (visitor.GetRowVisitor ());
        }
    }

    internal sealed class ExportedTypeRow : IMetadataRow {

        public static readonly int RowSize = 20;
        public static readonly int RowColumns = 5;

        [Column] private TypeAttributes m_flags;
        [Column] private uint m_typeDefId;
        [Column] private uint m_typeName;
        [Column] private uint m_typeNamespace;
        [Column] private MetadataToken m_implementation;

        public TypeAttributes Flags {
            get { return m_flags; }
            set { m_flags = value; }
        }

        public uint TypeDefId {
            get { return m_typeDefId; }
            set { m_typeDefId = value; }
        }

        public uint TypeName {
            get { return m_typeName; }
            set { m_typeName = value; }
        }

        public uint TypeNamespace {
            get { return m_typeNamespace; }
            set { m_typeNamespace = value; }
        }

        public MetadataToken Implementation {
            get { return m_implementation; }
            set { m_implementation = value; }
        }

        public int Size {
            get { return ExportedTypeRow.RowSize; }
        }

        public int Columns {
            get { return ExportedTypeRow.RowColumns; }
        }

        public void Accept (IMetadataRowVisitor visitor)
        {
            visitor.Visit (this);
        }
    }
}
